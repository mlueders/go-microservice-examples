package main

import (
	"database/sql"
	httpSwagger "github.com/swaggo/http-swagger"
	_ "go-microservice-examples/docs" // docs is generated by Swag CLI, you have to import it.
	"go-microservice-examples/user"
	"log"
	"net/http"
	"os"
)

// @title           Swagger Example API
// @version         1.0
// @description     This is a sample server celler server.
// @termsOfService  http://swagger.io/terms/

// @contact.name   API Support
// @contact.url    http://www.swagger.io/support
// @contact.email  support@swagger.io

// @license.name  Apache 2.0
// @license.url   http://www.apache.org/licenses/LICENSE-2.0.html

// @host      localhost:8080
// @BasePath  /api/v1

func main() {
	db := initDb()
	defer db.Close()

	userRepository := user.NewRepository(db)
	userRepository.CreateTables()

	user.SetupController(user.NewService(userRepository))
	http.HandleFunc("/swagger/", httpSwagger.Handler())
	http.ListenAndServe(":8090", nil)
}

func initDb() *sql.DB {
	dbName := "sqllite.db"
	os.Remove(dbName)
	file, err := os.Create(dbName)
	if err != nil {
	}
	file.Close()

	if err != nil {
		log.Fatal("could not create db file: %w", err)
	}
	file.Close()

	db, err := sql.Open("sqlite3", file.Name())
	if err != nil {
		log.Fatal("could not connect to database: %w", err)
	}
	return db
}
